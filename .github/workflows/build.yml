env:
  PLUGIN_PROJECT_NAME: Divination.Voiceroid2Talker
  PLUGIN_REPOSITORY: horoscope-dev/Dalamud.DivinationPluginRepo

### BEGIN TEMPLATE ###

name: Build

on:
  push:
    paths-ignore:
      - '*.md'

  release:
    types:
      - created

  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - '*.md'

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
          # Required by GitVersion
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - name: Restore Nuget Cache
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore Nuget Packages
        run: dotnet restore
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true

      - name: Build Plugin
        run: dotnet build --configuration Release --no-restore /property:OutputPath=bin\CIRelease\
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PLUGIN_PROJECT_NAME }}
          path: ${{ env.PLUGIN_PROJECT_NAME }}\bin\CIRelease\${{ env.PLUGIN_PROJECT_NAME }}
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.repository != 'horoscope-dev/Dalamud.Divination.Template' && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Plugin Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.PLUGIN_REPOSITORY }}
          token: ${{ secrets.GH_PAT }}

      - name: Prepare Repository Type (on Release)
        if: github.event_name == 'release'
        run: echo "REPOSITORY_TYPE=stable" >> $GITHUB_ENV
      - name: Prepare image tag (other branches)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: echo "REPOSITORY_TYPE=testing" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PLUGIN_PROJECT_NAME }}
          path: dist/${{ env.REPOSITORY_TYPE }}/${{ env.PLUGIN_PROJECT_NAME }}

      - name: Prepare Short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha

      - name: Push to Plugin Repository
        uses: EndBug/add-and-commit@v7
        with:
          add: --all
          branch: master
          default_author: github_actions
          message: Update ${{ env.PLUGIN_PROJECT_NAME }} (${{ env.REPOSITORY_TYPE }}, ${{ steps.short-sha.outputs.sha }})
